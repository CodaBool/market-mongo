stage: ${env.STAGE}
name: ${env.REPO}

sub_domain:
  dev: dev.
  prod: ''

url:
  dev: https://d3odhkorwtppnc.cloudfront.net # Can only be gotten after 1st deploy
  prod: GET_FROM_CLOUDFRONT_AFTER_ONE_DEPLOY # Can only be gotten after 1st deploy

serverless:
  component: '@sls-next/serverless-component@1.18.0'
  inputs:
    # memory: 2048
    # timeout: 30
    bucketRegion: us-east-1
    bucketName: ${name}-${stage}
    name:
      defaultLambda: ${name}-${stage}-default
      apiLambda: ${name}-${stage}-api
      imageLambda: ${name}-${stage}-image
    build:
      env:
        STRIPE_SK: ${env.STRIPE_SK}
        MONGODB_URI: ${env.MONGODB_URI}
        NEXTAUTH_URL: ${url.${stage}}
        NEXTAUTH_SECRET: ${env.NEXTAUTH_SECRET}
        NEXT_PUBLIC_STAGE: ${stage}
        NEXT_PUBLIC_STRIPE_PK: ${env.NEXT_PUBLIC_STRIPE_PK}
    # domain: ['${env.SUB_DOMAIN}', codattest.com] # sub = 'dev' || 'www' (depending on stage)
    domain: ['${sub_domain.${stage}}', codattest.com]
    publicDirectoryCache: false
    useServerlessTraceTarget: true
    # cloudfront:
      # distributionId: XYZEXAMPLE # if you want to use an existing cloudfront distribution, provide it here
      # aliases: ["example.com", "bar.example.com"]






# build:
#   cmd: npm # default = node_modules/.bin/next
#   args: [run, 'build'] # default = ['build']